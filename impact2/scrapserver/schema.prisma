datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:rwpgscalarlist_8513@localhost:5433/dairydb3?connection_limit=1"
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

generator pothos {
  provider = "prisma-pothos-types"
}

model Dairy {
  id          Int      @id @default(autoincrement())
  nom         String
  prix        String
  url         String
  prixspecial String
  img         String
  quantite    String
  quantite2   String
  prixunite   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Product {
  id          String            @id @default(uuid()) @db.Uuid
  nom         String
  prix        String
  url         String
  prixspecial String
  img         String
  quantite    String
  quantite2   String
  prixunite   String
  prodcats    ProductCategory[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model ProductCategory {
  id          String   @id @default(uuid()) @db.Uuid
  nom         String
  prix        String
  url         String
  prixspecial String
  img         String
  quantite    String
  quantite2   String
  prixunite   String
  article     Product  @relation(fields: [articleId], references: [id])
  articleId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id        String @id @default(uuid()) @db.Uuid
  nom       String
  prenom    String
  nickname  String
  profilpic String
  email     String @unique
  phone     String

  profileperso ProfilePerso? @relation("UserHasProfile")

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProfilePerso {
  id     String @id @default(uuid()) @db.Uuid
  name   String
  user   User   @relation("UserHasProfile", fields: [userId], references: [id])
  userId String @unique

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
